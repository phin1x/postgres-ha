apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres-ha.fullname" . }}
  labels:
    {{- include "postgres-ha.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgres-ha.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "postgres-ha.fullname" . }}-headless
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres-ha.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgres-ha.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          securityContext:
            {{- toYaml .Values.postgres.securityContext | nindent 12 }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          command:
            - /scripts/entrypoint.sh
          ports:
            - name: postgres
              containerPort: 15432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - psql -p 15432 -w -c "SELECT 1"
            initialDelaySeconds: 15
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - psql -p 15432 -w -c "SELECT 1"
            initialDelaySeconds: 15
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLUSTER_NETWORK_CIDR
              value: 10.0.0.0/8
            - name: POSTGRES_PASSWORD
              value: asdf
            - name: REPMGR_PASSWORD
              value: asdf
            - name: HEADLESS_SERVICE
              value: {{ include "postgres-ha.fullname" . }}-headless.{{ .Release.Namespace }}.svc.cluster.local
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql
            - name: scripts
              mountPath: /scripts
        - name: haproxy
          image: "{{ .Values.haproxy.image.repository }}:{{ .Values.haproxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.haproxy.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.haproxy.securityContext | nindent 12 }}
          ports:
            - name: haproxy
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8888
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
            {{- toYaml .Values.haproxy.resources | nindent 12 }}
          volumeMounts:
            - name: haproxy-config
              mountPath: /usr/local/etc/haproxy
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "postgres-ha.fullname" . }}-scripts
            defaultMode: 0755
        - name: haproxy-config
          configMap:
            name: {{ include "postgres-ha.fullname" . }}-haproxy
            defaultMode: 0444
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
